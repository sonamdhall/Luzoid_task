{"ast":null,"code":"var _jsxFileName = \"E:\\\\practice\\\\src\\\\Task1\\\\Kyc.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Kyc extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.loadBlockpassWidget = () => {\n      const blockpass = new window.BlockpassKYCConnect('test@gmail.com', // service client_id from the admin console\n      {\n        refId: \"test@gmail.com\" // assign the local user_id of the connected user\n\n      });\n      blockpass.startKYCConnect();\n      blockpass.on('KYCConnectSuccess', () => {\n        //add code that will trigger when data have been sent.\n        console.log(\"KYC connect is successful!!\");\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.loadBlockpassWidget();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container bg-light border border-success pb-5\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-center\",\n          children: \"KYC Connect\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 2\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"blockpass-kyc-connect\",\n          style: {\n            marginLeft: \"490px\"\n          },\n          children: \"Verify with Blockpass\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 2\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 2\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nexport default Kyc;","map":{"version":3,"sources":["E:/practice/src/Task1/Kyc.js"],"names":["React","Kyc","Component","constructor","props","loadBlockpassWidget","blockpass","window","BlockpassKYCConnect","refId","startKYCConnect","on","console","log","componentDidMount","render","marginLeft"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,MAAMC,GAAN,SAAkBD,KAAK,CAACE,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAOnBC,mBAPmB,GAOG,MAAM;AAC1B,YAAMC,SAAS,GAAG,IAAIC,MAAM,CAACC,mBAAX,CAChB,gBADgB,EACE;AAClB;AACEC,QAAAA,KAAK,EAAE,gBADT,CAC2B;;AAD3B,OAFgB,CAAlB;AAOAH,MAAAA,SAAS,CAACI,eAAV;AAEAJ,MAAAA,SAAS,CAACK,EAAV,CAAa,mBAAb,EAAkC,MAAM;AACtC;AACHC,QAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACE,OAHD;AAID,KArBkB;AAElB;;AACDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKT,mBAAL;AACD;;AAkBDU,EAAAA,MAAM,GAAG;AACP,wBACH;AAAA,6BACA;AAAK,QAAA,SAAS,EAAC,+CAAf;AAAA,gCACA;AAAI,UAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,eAEA;AAAQ,UAAA,EAAE,EAAC,uBAAX;AAAmC,UAAA,KAAK,EAAE;AAACC,YAAAA,UAAU,EAAC;AAAZ,WAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA,qBADG;AAUD;;AAnC+B;;AAsClC,eAAef,GAAf","sourcesContent":["import React from 'react';\n\nclass Kyc extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  componentDidMount() {    \n    this.loadBlockpassWidget()\n  }\n\n  loadBlockpassWidget = () => {\n    const blockpass = new window.BlockpassKYCConnect(\n      'test@gmail.com', // service client_id from the admin console\n      {\n        refId: \"test@gmail.com\", // assign the local user_id of the connected user\n      }\n    )\n\n    blockpass.startKYCConnect()\n\n    blockpass.on('KYCConnectSuccess', () => {\n      //add code that will trigger when data have been sent.\n\t  console.log(\"KYC connect is successful!!\");\n    })\n  }\n\n  render() {\n    return (\n\t<>\n\t<div className=\"container bg-light border border-success pb-5\">\n\t<h1 className=\"text-center\">KYC Connect</h1>\n\t<button id=\"blockpass-kyc-connect\" style={{marginLeft:\"490px\"}}>\n        Verify with Blockpass\n      </button>\n\t </div> \n\t</> \n\t);\n  }\n}\n\nexport default Kyc;\n"]},"metadata":{},"sourceType":"module"}