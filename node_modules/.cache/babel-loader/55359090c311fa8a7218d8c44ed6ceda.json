{"ast":null,"code":"import _classCallCheck from\"E:/practice/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"E:/practice/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"E:/practice/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"E:/practice/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var Kyc=/*#__PURE__*/function(_React$Component){_inherits(Kyc,_React$Component);var _super=_createSuper(Kyc);function Kyc(props){var _this;_classCallCheck(this,Kyc);_this=_super.call(this,props);_this.loadBlockpassWidget=function(){var blockpass=new window.BlockpassKYCConnect('test@gmail.com',// service client_id from the admin console\n{refId:\"test@gmail.com\"// assign the local user_id of the connected user\n});blockpass.startKYCConnect();blockpass.on('KYCConnectSuccess',function(){//add code that will trigger when data have been sent.\nconsole.log(\"KYC connect is successful!!\");});};return _this;}_createClass(Kyc,[{key:\"componentDidMount\",value:function componentDidMount(){this.loadBlockpassWidget();}},{key:\"render\",value:function render(){return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"container bg-light border border-success mt-2 pb-3\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-center\",children:\"KYC Connect\"}),/*#__PURE__*/_jsx(\"button\",{id:\"blockpass-kyc-connect\",style:{marginLeft:\"490px\"},children:\"Verify with Blockpass\"})]})});}}]);return Kyc;}(React.Component);export default Kyc;","map":{"version":3,"sources":["E:/practice/src/Task1/Kyc.js"],"names":["React","Kyc","props","loadBlockpassWidget","blockpass","window","BlockpassKYCConnect","refId","startKYCConnect","on","console","log","marginLeft","Component"],"mappings":"wfAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,C,gJAEMC,CAAAA,G,sGACJ,aAAYC,KAAZ,CAAmB,qCACjB,uBAAMA,KAAN,EADiB,MAOnBC,mBAPmB,CAOG,UAAM,CAC1B,GAAMC,CAAAA,SAAS,CAAG,GAAIC,CAAAA,MAAM,CAACC,mBAAX,CAChB,gBADgB,CACE;AAClB,CACEC,KAAK,CAAE,gBAAkB;AAD3B,CAFgB,CAAlB,CAOAH,SAAS,CAACI,eAAV,GAEAJ,SAAS,CAACK,EAAV,CAAa,mBAAb,CAAkC,UAAM,CACtC;AACHC,OAAO,CAACC,GAAR,CAAY,6BAAZ,EACE,CAHD,EAID,CArBkB,cAElB,C,iDACD,4BAAoB,CAClB,KAAKR,mBAAL,GACD,C,sBAkBD,iBAAS,CACP,mBACH,sCACA,aAAK,SAAS,CAAC,oDAAf,wBACA,WAAI,SAAS,CAAC,aAAd,yBADA,cAEA,eAAQ,EAAE,CAAC,uBAAX,CAAmC,KAAK,CAAE,CAACS,UAAU,CAAC,OAAZ,CAA1C,mCAFA,GADA,EADG,CAUD,C,iBAnCeZ,KAAK,CAACa,S,EAsCxB,cAAeZ,CAAAA,GAAf","sourcesContent":["import React from 'react';\n\nclass Kyc extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  componentDidMount() {    \n    this.loadBlockpassWidget()\n  }\n\n  loadBlockpassWidget = () => {\n    const blockpass = new window.BlockpassKYCConnect(\n      'test@gmail.com', // service client_id from the admin console\n      {\n        refId: \"test@gmail.com\", // assign the local user_id of the connected user\n      }\n    )\n\n    blockpass.startKYCConnect()\n\n    blockpass.on('KYCConnectSuccess', () => {\n      //add code that will trigger when data have been sent.\n\t  console.log(\"KYC connect is successful!!\");\n    })\n  }\n\n  render() {\n    return (\n\t<>\n\t<div className=\"container bg-light border border-success mt-2 pb-3\">\n\t<h1 className=\"text-center\">KYC Connect</h1>\n\t<button id=\"blockpass-kyc-connect\" style={{marginLeft:\"490px\"}}>\n        Verify with Blockpass\n      </button>\n\t </div> \n\t</> \n\t);\n  }\n}\n\nexport default Kyc;\n"]},"metadata":{},"sourceType":"module"}