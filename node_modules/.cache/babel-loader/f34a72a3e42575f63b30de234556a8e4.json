{"ast":null,"code":"var _jsxFileName = \"E:\\\\practice\\\\src\\\\Findztask\\\\Header1.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './Task_css.css';\nimport { AiFillHome } from 'react-icons/ai';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Header1() {\n  _s();\n\n  const [searchterm, setSearchterm] = useState(null);\n  const [moviedata, setMoviedata] = useState([]);\n  const [output, setOutput] = useState([]);\n  const url = \"https://api.themoviedb.org/3/movie/upcoming?api_key=a0d1ccffb7077d4acb8d946b535565ac&language=en-US&page=1\";\n  useEffect(() => {\n    loadData();\n  }, [searchterm]);\n\n  const loadData = async () => {\n    const response = await fetch(url);\n    const data = await response.json();\n    setMoviedata(Object.keys(data.results));\n    console.log(data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container header\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"merge\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"text1\",\n          placeholder: \"SEARCH\",\n          value: searchterm,\n          onChange: event => {\n            setSearchterm(event.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: /*#__PURE__*/_jsxDEV(AiFillHome, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 4\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 4\n    }, this), moviedata.map((item, key) => {\n      console.log(\"search is:\" + searchterm);\n      console.log(\"search is:\" + item.original_title);\n\n      if (item.original_title === searchterm) {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: item.original_title\n          }, item.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: item.overview\n          }, item.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true);\n      }\n    })]\n  }, void 0, true);\n}\n\n_s(Header1, \"zyASmxAWgTQo7OhzyZ1lJsIV9Qc=\");\n\n_c = Header1;\nexport default Header1;\n\nvar _c;\n\n$RefreshReg$(_c, \"Header1\");","map":{"version":3,"sources":["E:/practice/src/Findztask/Header1.js"],"names":["React","useState","useEffect","AiFillHome","Header1","searchterm","setSearchterm","moviedata","setMoviedata","output","setOutput","url","loadData","response","fetch","data","json","Object","keys","results","console","log","event","target","value","map","item","key","original_title","id","overview"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;AACA,OAAO,gBAAP;AACA,SAASC,UAAT,QAA2B,gBAA3B;;;;AAIA,SAASC,OAAT,GAAmB;AAAA;;AAClB,QAAM,CAACC,UAAD,EAAYC,aAAZ,IAA2BL,QAAQ,CAAC,IAAD,CAAzC;AACA,QAAM,CAACM,SAAD,EAAWC,YAAX,IAAyBP,QAAQ,CAAC,EAAD,CAAvC;AACA,QAAM,CAACQ,MAAD,EAAQC,SAAR,IAAmBT,QAAQ,CAAC,EAAD,CAAjC;AAGA,QAAMU,GAAG,GAAC,4GAAV;AAEAT,EAAAA,SAAS,CAAC,MAAM;AACbU,IAAAA,QAAQ;AACV,GAFQ,EAEP,CAACP,UAAD,CAFO,CAAT;;AAQC,QAAMO,QAAQ,GAAC,YAAS;AACvB,UAAMC,QAAQ,GAAC,MAAMC,KAAK,CAACH,GAAD,CAA1B;AACA,UAAMI,IAAI,GAAC,MAAMF,QAAQ,CAACG,IAAT,EAAjB;AACAR,IAAAA,YAAY,CAAES,MAAM,CAACC,IAAP,CAAYH,IAAI,CAACI,OAAjB,CAAF,CAAZ;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYN,IAAZ;AACA,GALD;;AAQA,sBACA;AAAA,4BAEC;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,6BACA;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,gCACC;AACA,UAAA,IAAI,EAAC,MADL;AAEY,UAAA,EAAE,EAAC,OAFf;AAGA,UAAA,WAAW,EAAC,QAHZ;AAIA,UAAA,KAAK,EAAEV,UAJP;AAKA,UAAA,QAAQ,EAAGiB,KAAD,IAAS;AAAChB,YAAAA,aAAa,CAACgB,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAb;AAAkC;AALtD;AAAA;AAAA;AAAA;AAAA,gBADD,eASC;AAAA,iCAAI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,gBATD;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YAFD,EAmBCjB,SAAS,CAACkB,GAAV,CAAc,CAACC,IAAD,EAAMC,GAAN,KAAY;AAC1BP,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAahB,UAAzB;AACAe,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAcK,IAAI,CAACE,cAA/B;;AACA,UAAGF,IAAI,CAACE,cAAL,KAAsBvB,UAAzB,EACA;AACC,4BACA;AAAA,kCACA;AAAA,sBAAmBqB,IAAI,CAACE;AAAxB,aAASF,IAAI,CAACG,EAAd;AAAA;AAAA;AAAA;AAAA,kBADA,eAEA;AAAA,sBAAmBH,IAAI,CAACI;AAAxB,aAASJ,IAAI,CAACG,EAAd;AAAA;AAAA;AAAA;AAAA,kBAFA;AAAA,wBADA;AAMA;AACD,KAZA,CAnBD;AAAA,kBADA;AAuCD;;GA/DQzB,O;;KAAAA,O;AAiET,eAAeA,OAAf","sourcesContent":["import React,{useState,useEffect} from 'react';\nimport './Task_css.css';\nimport { AiFillHome } from 'react-icons/ai'\n\n\n\nfunction Header1() {\n\tconst [searchterm,setSearchterm]=useState(null);\n\tconst [moviedata,setMoviedata]=useState([]);\n\tconst [output,setOutput]=useState([]);\n\t\n\n\tconst url=\"https://api.themoviedb.org/3/movie/upcoming?api_key=a0d1ccffb7077d4acb8d946b535565ac&language=en-US&page=1\";\n\n\tuseEffect(() => {\n    loadData();\n\t},[searchterm]);\n\t\n\t\n\t\n\n  \n  const loadData=async()=>{\n\t  const response=await fetch(url);\n\t  const data=await response.json();\n\t  setMoviedata((Object.keys(data.results)));\n\t  console.log(data);\n  }\n  \n  \n  return (\n  <>\n \n\t\t <div className=\"container header\">\n\t\t\t<div className=\"merge\">\t\n\t\t\t\t<input \n\t\t\t\ttype=\"text\"\n                id=\"text1\"\t\t\t\t\n\t\t\t\tplaceholder=\"SEARCH\"\n\t\t\t\tvalue={searchterm}\n\t\t\t\tonChange={(event)=>{setSearchterm(event.target.value)}}/>\n\t\t\t\t\n\t\t\n\t\t\t\t<h4><AiFillHome/></h4>\n\t\t\t</div>\n\t\n\t\t\n\t\t </div>\n\t\t\t\t\n\t\n\t\t{moviedata.map((item,key)=>{\n\t\t\tconsole.log(\"search is:\"+searchterm);\n\t\t\tconsole.log(\"search is:\"+ item.original_title)\n\t\t\tif(item.original_title===searchterm)\n\t\t\t{\n\t\t\t\treturn (\n\t\t\t\t<>\n\t\t\t\t<h1 key={item.id}>{item.original_title}</h1>\n\t\t\t\t<h1 key={item.id}>{item.overview}</h1>\n\t\t\t\t</>\n\t\t\t\t);\n\t\t\t}\n\t\t})}\n\t\t\n\t </>\n\t);\n\t\t\n\t\t \n\n}\n\nexport default Header1;\n"]},"metadata":{},"sourceType":"module"}